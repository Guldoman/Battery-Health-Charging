#!/bin/bash

# batteryhealthchargingctl - This script for setting charging limit
#
# This file is part of the gnome-shell extension Battery-Health-Charging@maniacx.github.com.

BAT0_END_PATH='/sys/class/power_supply/BAT0/charge_control_end_threshold';
BAT0_START_PATH='/sys/class/power_supply/BAT0/charge_control_start_threshold';
BAT1_END_PATH='/sys/class/power_supply/BAT1/charge_control_end_threshold';
BAT1_START_PATH='/sys/class/power_supply/BAT1/charge_control_start_threshold';
LG_PATH='/sys/devices/platform/lg-laptop/battery_care_limit';
LENOVA_PATH='/sys/bus/platform/drivers/ideapad_acpi/VPC2004:00/conservation_mode';
SONY_PATH='/sys/devices/platform/sony-laptop/battery_care_limiter';
HUWAEI_PATH='/sys/devices/platform/huawei-wmi/charge_thresholds';
SAMSUNG_PATH='/sys/devices/platform/samsung/battery_life_extender';
ACER_PATH='/sys/bus/wmi/drivers/acer-wmi-battery/health_mode';
BATC_END_PATH='/sys/class/power_supply/BATC/charge_control_end_threshold';
BATT_END_PATH='/sys/class/power_supply/BATT/charge_control_end_threshold';
TP_BAT0_END='/sys/devices/platform/smapi/BAT0/stop_charge_thresh';
TP_BAT0_START='/sys/devices/platform/smapi/BAT0/start_charge_thresh';
TP_BAT1_END='/sys/devices/platform/smapi/BAT1/stop_charge_thresh';
TP_BAT1_START='/sys/devices/platform/smapi/BAT1/start_charge_thresh';

EXTENSION_NAME="Battery Health Charging"
ACTION_BASE="dem.batteryhealthcharging"
RULE_BASE="$ACTION_BASE.setthreshold"
BHC_BASE="batteryhealthchargingctl"
BHC_DIR="/usr/local/bin"
RULE_DIR="/etc/polkit-1/rules.d"
LEGACY_POLKIT=false

EXIT_SUCCESS=0
EXIT_NEEDS_UPDATE=1

case "$1" in
    BAT0_END_PATH)
        echo "$2" > "$BAT0_END_PATH"
        ;;
    BAT0_START_PATH)
        echo "$2" > "$BAT0_START_PATH"
        ;;
    BAT1_END_PATH)
        echo "$2" > "$BAT1_END_PATH"
        ;;
    BAT1_START_PATH)
        echo "$2" > "$BAT1_START_PATH"
        ;;
    LG_PATH)
        echo "$2" > "$LG_PATH"
        ;;
    LENOVA_PATH)
        echo "$2" > "$LENOVA_PATH"
        ;;
    SONY_PATH)
        echo "$2" > "$SONY_PATH"
        ;;
    HUWAEI_PATH)
        echo "$2 $3" > "$HUWAEI_PATH"
        ;;
    SAMSUNG_PATH)
        echo "$2" > "$SAMSUNG_PATH"
        ;;
    ACER_PATH)
        echo "$2" > "$ACER_PATH"
        ;;
    BATC_END_PATH)
        echo "$2" > "$BATC_END_PATH"
        ;;
    BATT_END_PATH)
        echo "$2" > "$BATT_END_PATH"
        ;;
    TP_BAT0_END)
        echo "$2" > "$TP_BAT0_END"
        ;;
    TP_BAT0_START)
        echo "$2" > "$TP_BAT0_START"
        ;;
    TP_BAT1_END)
        echo "$2" > "$TP_BAT1_END"
        ;;
    TP_BAT1_START)
        echo "$2" > "$TP_BAT1_START"
        ;;
    CHECKINSTALLATION)
    printf -v versions '%s\n%s' "$(pkaction --version | cut -d' ' -f3)" "0.106"
    if [[ $versions != "$(sort -V <<< "$versions")" ]];then
        LEGACY_POLKIT=false
    else
        LEGACY_POLKIT=true
    fi
        EXTDIR=$2
        TOOL_USER=$3
        RULE_IN="${EXTDIR}/10-${RULE_BASE}.rules"
        if [[ "$LEGACY_POLKIT" = true ]];then
            RULE_IN="${RULE_IN}.legacy"
            ACTION_IN="${EXTDIR}/${ACTION_BASE}.policy.in"
        fi
        TOOL_IN="${EXTDIR}/${BHC_BASE}"
        TOOL_OUT="${BHC_DIR}/${BHC_BASE}-${TOOL_USER}"
        RULE_OUT="${RULE_DIR}/10-${RULE_BASE}-${TOOL_USER}.rules"
        ACTION_ID="${RULE_BASE}.${TOOL_USER}"
        ACTION_OUT="/usr/share/polkit-1/actions/${ACTION_ID}.policy"

        if [[ "$LEGACY_POLKIT" = true ]];then
            echo "Your $EXTENSION_NAME checking legacy rules and policies !"
            if ! sed -e "s:{{RULE_BASE}}:${RULE_BASE}:g" "${RULE_IN}" | \
                cmp --silent "${RULE_OUT}"
            then
                echo "Your $EXTENSION_NAME installation needs to update rules !"
                exit ${EXIT_NEEDS_UPDATE}
            else
                if ! sed -e "s:{{PATH}}:${TOOL_OUT}:g" \
                    -e "s:{{ACTION_BASE}}:${ACTION_BASE}:g" \
                    -e "s:{{ACTION_ID}}:${ACTION_ID}:g" "${ACTION_IN}" | \
                    cmp --silent "${ACTION_OUT}"
                then
                    echo "Your $EXTENSION_NAME installation needs to update policies!"
                    exit ${EXIT_NEEDS_UPDATE}
                fi
            fi
        else
            echo "Your $EXTENSION_NAME checking rules !"
            if ! sed -e "s:{{TOOL_OUT}}:${TOOL_OUT}:g" \
                -e "s:{{TOOL_USER}}:${TOOL_USER}:g" "${RULE_IN}" | \
                cmp --silent "${RULE_OUT}"
            then
                echo "Your $EXTENSION_NAME installation needs updating rules!"
                exit ${EXIT_NEEDS_UPDATE}
            fi
        fi
        echo "Your $EXTENSION_NAME checking ctl !"
        if ! cmp --silent "${TOOL_IN}" "${TOOL_OUT}";then
            echo "Your $EXTENSION_NAME installation needs updating ctl!"
            exit ${EXIT_NEEDS_UPDATE}
        fi
        echo "Your $EXTENSION_NAME installation is up to date "
        exit ${EXIT_SUCCESS}
        ;;
    *)
        echo "Unknown" >&2
esac
